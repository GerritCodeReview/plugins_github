{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a0cd0e45_5999967a",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/GitHubOAuthConfig.java",
        "patchSetId": 8
      },
      "lineNbr": 214,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2022-09-06T10:06:53Z",
      "side": 1,
      "message": "since we are specifying the password length how about checking it here e.g.\n```\n  if (in.read(passphrase) \u003c passwordLength) {\n    ...\n```\nas I believe it should be either read fully or fail... I was also thinking if one specifies sth else then `/dev/zero` IOW the regular file. In that case reading it fully would make sense and we could indicate the intent by setting `passwordLength` to either `0` or `-1`, WDYT?",
      "range": {
        "startLine": 214,
        "startChar": 32,
        "endLine": 214,
        "endChar": 34
      },
      "revId": "52dabb04c1ee6505ed7ef68329b5376f40691097",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "acc34eab_742acdc2",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/GitHubOAuthConfig.java",
        "patchSetId": 8
      },
      "lineNbr": 214,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2022-09-06T20:17:00Z",
      "side": 1,
      "message": "\u003e since we are specifying the password length how about checking it here e.g.\n\u003e ```\n\u003e   if (in.read(passphrase) \u003c passwordLength) {\n\u003e     ...\n\u003e ```\n\nLooking at the implementation, looks this is not necessary really:\n\n```\n    public int read(byte b[]) throws IOException {\n        return readBytes(b, 0, b.length);\n```\nThe last argument, `b.length`, represents the `number of bytes that are written` (from the docs).\n\nif the EOF is reached before b.length are read, -1 will be returned.\n\n\u003e as I believe it should be either read fully or fail... I was also thinking if one specifies sth else then `/dev/zero` IOW the regular file. In that case reading it fully would make sense and we could indicate the intent by setting `passwordLength` to either `0` or `-1`, WDYT?\n\nYes, this would be convenient.\n\nI think it is out of scope for this issue though, so perhaps we can create a feature request or a follow up change?",
      "parentUuid": "a0cd0e45_5999967a",
      "range": {
        "startLine": 214,
        "startChar": 32,
        "endLine": 214,
        "endChar": 34
      },
      "revId": "52dabb04c1ee6505ed7ef68329b5376f40691097",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f29b10e_b2eb5dcb",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/GitHubOAuthConfig.java",
        "patchSetId": 8
      },
      "lineNbr": 214,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2022-09-07T06:29:07Z",
      "side": 1,
      "message": "\u003e The last argument,  b.length , represents the  number of bytes that are written  (from the docs).\n\nAFAIU there is wrong copy-pasted javadoc from `FileOutputStream` for `private native int readBytes(byte b[], int off, int len)` of `FileInputStream` hence the confusion :/ however per javadocs for `read(byte b[])` (again in `FileInputStream`):\n```\n* @return     the total number of bytes read into the buffer, or\n*             \u003ccode\u003e-1\u003c/code\u003e if there is no more data because the end of\n*             the file has been reached.\n```\n\nIOW one can get:\n1. `-1` when reading from empty (or ended) stream\n2. `b.length` if enough bytes were available in stream\n3. `n \u003c b.length` if some bytes were available in the stream but less than `b.length`\n\nAnd here we go with the confirmation:\n```\npublic class ReadingFromFile {\n  private static byte[] IN_FILE \u003d \"12345\".getBytes(StandardCharsets.UTF_8);\n\n  private static File getTempFileWithContent() throws IOException {\n    Path tempFile \u003d Files.createTempFile(null, null);\n    Files.write(tempFile, IN_FILE);\n    return tempFile.toFile();\n  }\n\n  public static void main(String[] args) throws IOException {\n    byte[] toRead \u003d new byte[IN_FILE.length + 1];\n    File emptyFile \u003d Files.createTempFile(null, null).toFile();\n    try (FileInputStream in \u003d new FileInputStream(emptyFile)) {\n      int read \u003d in.read(toRead);\n      System.out.println(String.format(\"empty file read %d\", read));\n    } finally {\n      emptyFile.delete();\n    }\n\n    File tempFile \u003d getTempFileWithContent();\n    try (FileInputStream in \u003d new FileInputStream(tempFile)) {\n      int read \u003d in.read(toRead);\n      System.out.println(String.format(\"toRead %d vs read %d\", toRead.length, read));\n      read \u003d in.read(toRead);\n      System.out.println(String.format(\"empty stream read %d\", read));\n    } finally {\n      tempFile.delete();\n    }\n  }\n}\n```\n\nthat produces the following output\n```\nempty file read -1\ntoRead 6 vs read 5\nempty stream read -1\n```\n\nIn terms of:\n\u003e I think it is out of scope for this issue though, so perhaps we can create a feature request or a follow up change?\n\n+1 for the follow up",
      "parentUuid": "acc34eab_742acdc2",
      "range": {
        "startLine": 214,
        "startChar": 32,
        "endLine": 214,
        "endChar": 34
      },
      "revId": "52dabb04c1ee6505ed7ef68329b5376f40691097",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b4382dcd_ed39bd71",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/GitHubOAuthConfig.java",
        "patchSetId": 8
      },
      "lineNbr": 214,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2022-09-07T07:10:13Z",
      "side": 1,
      "message": "wow, thanks for trying this out!\nYou\u0027re right I was misled by the wrong javadocs, thanks for looking into this!\n\nIt is resolved now.",
      "parentUuid": "4f29b10e_b2eb5dcb",
      "range": {
        "startLine": 214,
        "startChar": 32,
        "endLine": 214,
        "endChar": 34
      },
      "revId": "52dabb04c1ee6505ed7ef68329b5376f40691097",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}