{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c52b8d67_23c60723",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 22
      },
      "lineNbr": 0,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2022-09-22T06:50:47Z",
      "side": 1,
      "message": "Should we have a follow up that instead of using `/dev/zero` file (which is not really secure) would actually create a file under `[gerrit_site]/etc/` with auto-generated key? In that case default configuration would be a secure one out-fo-the-box? @luca @tony WDYT?",
      "revId": "b5800407d761a6b9f394137e8d20e37ecd9c863b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8c5fc23_db0161ea",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/OAuthTokenCipher.java",
        "patchSetId": 22
      },
      "lineNbr": 109,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-09-21T23:13:42Z",
      "side": 1,
      "message": "Unneeded `else`",
      "range": {
        "startLine": 109,
        "startChar": 8,
        "endLine": 109,
        "endChar": 14
      },
      "revId": "b5800407d761a6b9f394137e8d20e37ecd9c863b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8120392_04d4366b",
        "filename": "github-oauth/src/test/java/com/googlesource/gerrit/plugins/github/oauth/GitHubOAuthConfigTest.java",
        "patchSetId": 22
      },
      "lineNbr": 1,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2022-09-22T06:50:47Z",
      "side": 1,
      "message": "missing copyright header",
      "revId": "b5800407d761a6b9f394137e8d20e37ecd9c863b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "130b995c_a8d97f78",
        "filename": "github-oauth/src/test/java/com/googlesource/gerrit/plugins/github/oauth/OAuthTokenCipherTest.java",
        "patchSetId": 22
      },
      "lineNbr": 43,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-09-21T23:13:42Z",
      "side": 1,
      "message": "This can be instantiated in the `setUp()` with:\n```\n    canonicalWebUrl \u003d Guice.createInjector(\n            new AbstractModule() {\n              @Override\n              protected void configure() {\n                bind(String.class).annotatedWith(com.google.gerrit.server.config.CanonicalWebUrl.class).toProvider(Providers.of(null));\n              }\n            }\n    ).getInstance(CanonicalWebUrl.class);\n```",
      "range": {
        "startLine": 43,
        "startChar": 2,
        "endLine": 43,
        "endChar": 40
      },
      "revId": "b5800407d761a6b9f394137e8d20e37ecd9c863b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8506d440_73d4e492",
        "filename": "github-oauth/src/test/java/com/googlesource/gerrit/plugins/github/oauth/OAuthTokenCipherTest.java",
        "patchSetId": 22
      },
      "lineNbr": 69,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2022-09-22T06:50:47Z",
      "side": 1,
      "message": "if `encrypt` and `decrypt` were just returning input values it would still be `true`, right?",
      "range": {
        "startLine": 69,
        "startChar": 17,
        "endLine": 69,
        "endChar": 81
      },
      "revId": "b5800407d761a6b9f394137e8d20e37ecd9c863b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7411869f_62c7b3ab",
        "filename": "github-oauth/src/test/java/com/googlesource/gerrit/plugins/github/oauth/OAuthTokenCipherTest.java",
        "patchSetId": 22
      },
      "lineNbr": 83,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2022-09-22T06:50:47Z",
      "side": 1,
      "message": "nit: it would be easier to follow if `prefix` was explicitly tested for existence as it is intended in the test description, at present it is verified by `dropKeyId` not failing during execution...",
      "range": {
        "startLine": 81,
        "startChar": 4,
        "endLine": 83,
        "endChar": 57
      },
      "revId": "b5800407d761a6b9f394137e8d20e37ecd9c863b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2b3e53a2_a5f17a83",
        "filename": "github-oauth/src/test/java/com/googlesource/gerrit/plugins/github/oauth/OAuthTokenCipherTest.java",
        "patchSetId": 22
      },
      "lineNbr": 101,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2022-09-22T06:50:47Z",
      "side": 1,
      "message": "what if `plainTextToken` contains `:` string? Is that a real case for GitHub OAuth tokens to contain `:` in body?\nAnswering myself - according to [1] it cannot ;)\n\n[1] https://github.blog/changelog/2021-03-31-authentication-token-format-updates-are-generally-available/",
      "range": {
        "startLine": 98,
        "startChar": 2,
        "endLine": 101,
        "endChar": 3
      },
      "revId": "b5800407d761a6b9f394137e8d20e37ecd9c863b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71dd2375_7aeeb9c4",
        "filename": "github-oauth/src/test/java/com/googlesource/gerrit/plugins/github/oauth/OAuthTokenCipherTest.java",
        "patchSetId": 22
      },
      "lineNbr": 144,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2022-09-22T06:50:47Z",
      "side": 1,
      "message": "nit: it is in test already",
      "range": {
        "startLine": 144,
        "startChar": 2,
        "endLine": 144,
        "endChar": 20
      },
      "revId": "b5800407d761a6b9f394137e8d20e37ecd9c863b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6fb4f563_0b626f2e",
        "filename": "github-oauth/src/test/java/com/googlesource/gerrit/plugins/github/oauth/OAuthTokenCipherTest.java",
        "patchSetId": 22
      },
      "lineNbr": 145,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2022-09-22T06:50:47Z",
      "side": 1,
      "message": "can be private",
      "revId": "b5800407d761a6b9f394137e8d20e37ecd9c863b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e34e7861_67e44c4c",
        "filename": "github-oauth/src/test/java/com/googlesource/gerrit/plugins/github/oauth/OAuthTokenCipherTest.java",
        "patchSetId": 22
      },
      "lineNbr": 149,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2022-09-22T06:50:47Z",
      "side": 1,
      "message": "nit: it is in test already",
      "range": {
        "startLine": 149,
        "startChar": 2,
        "endLine": 149,
        "endChar": 20
      },
      "revId": "b5800407d761a6b9f394137e8d20e37ecd9c863b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71520114_d800bcf8",
        "filename": "github-oauth/src/test/java/com/googlesource/gerrit/plugins/github/oauth/OAuthTokenCipherTest.java",
        "patchSetId": 22
      },
      "lineNbr": 150,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2022-09-22T06:50:47Z",
      "side": 1,
      "message": "can be private",
      "revId": "b5800407d761a6b9f394137e8d20e37ecd9c863b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}