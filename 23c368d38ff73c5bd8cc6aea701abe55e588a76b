{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a8473434_93c68038",
        "filename": "/COMMIT_MSG",
        "patchSetId": 30
      },
      "lineNbr": 11,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-08-22T06:39:27Z",
      "side": 1,
      "message": "nit: `s/the the/the`",
      "range": {
        "startLine": 11,
        "startChar": 60,
        "endLine": 11,
        "endChar": 67
      },
      "revId": "23c368d38ff73c5bd8cc6aea701abe55e588a76b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c37d12ff_c6a817b1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 30
      },
      "lineNbr": 11,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-08-22T07:40:36Z",
      "side": 1,
      "message": "I need to review the whole description, I am not very happy wit that.",
      "parentUuid": "a8473434_93c68038",
      "range": {
        "startLine": 11,
        "startChar": 60,
        "endLine": 11,
        "endChar": 67
      },
      "revId": "23c368d38ff73c5bd8cc6aea701abe55e588a76b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ecf5b30b_6c106c8a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 30
      },
      "lineNbr": 11,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-08-22T09:51:25Z",
      "side": 1,
      "message": "Agreed, we need more context on why this is needed.\n\nThe code itself says what we have changed, but the commit message needs to explain the context and the rationale behind it, other than the intended behaviour.",
      "parentUuid": "c37d12ff_c6a817b1",
      "range": {
        "startLine": 11,
        "startChar": 60,
        "endLine": 11,
        "endChar": 67
      },
      "revId": "23c368d38ff73c5bd8cc6aea701abe55e588a76b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea540e62_07b9e8e2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 30
      },
      "lineNbr": 11,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-08-22T10:07:10Z",
      "side": 1,
      "message": "once we define the issue then I can elaborate more this description.",
      "parentUuid": "ecf5b30b_6c106c8a",
      "range": {
        "startLine": 11,
        "startChar": 60,
        "endLine": 11,
        "endChar": 67
      },
      "revId": "23c368d38ff73c5bd8cc6aea701abe55e588a76b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c443543f_e7f0cc6f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 30
      },
      "lineNbr": 17,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-08-22T06:39:27Z",
      "side": 1,
      "message": "nit: missing Issue number from the tracker",
      "revId": "23c368d38ff73c5bd8cc6aea701abe55e588a76b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f393d29c_f87bd488",
        "filename": "/COMMIT_MSG",
        "patchSetId": 30
      },
      "lineNbr": 17,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-08-22T07:40:36Z",
      "side": 1,
      "message": "I dont think that we have one, I need to create it.",
      "parentUuid": "c443543f_e7f0cc6f",
      "revId": "23c368d38ff73c5bd8cc6aea701abe55e588a76b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f014d5fc_7b85ef2d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 30
      },
      "lineNbr": 17,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-08-22T09:51:25Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "f393d29c_f87bd488",
      "revId": "23c368d38ff73c5bd8cc6aea701abe55e588a76b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0abfd802_7af72573",
        "filename": "/COMMIT_MSG",
        "patchSetId": 30
      },
      "lineNbr": 17,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-08-22T10:07:10Z",
      "side": 1,
      "message": "I need help for this.",
      "parentUuid": "f014d5fc_7b85ef2d",
      "revId": "23c368d38ff73c5bd8cc6aea701abe55e588a76b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c2f54d19_d985698a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 30
      },
      "lineNbr": 0,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-08-21T16:55:23Z",
      "side": 1,
      "message": "The commit description needs to be improved and documentation needs to be added in the RADME.md",
      "revId": "23c368d38ff73c5bd8cc6aea701abe55e588a76b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "122734d2_5874b1ac",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/LoginOAuthRedirectionFilter.java",
        "patchSetId": 30
      },
      "lineNbr": 26,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-08-22T06:39:27Z",
      "side": 1,
      "message": "in Gerrit project star imports are not used - perhaps needs GJF formatting?",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 23
      },
      "revId": "23c368d38ff73c5bd8cc6aea701abe55e588a76b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7032df7a_91a524e6",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/LoginOAuthRedirectionFilter.java",
        "patchSetId": 30
      },
      "lineNbr": 26,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-08-22T07:40:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "122734d2_5874b1ac",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 23
      },
      "revId": "23c368d38ff73c5bd8cc6aea701abe55e588a76b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2e05a9b_40bef246",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/LoginOAuthRedirectionFilter.java",
        "patchSetId": 30
      },
      "lineNbr": 38,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-08-22T06:39:27Z",
      "side": 1,
      "message": "nit: these constants are available in `com.google.common.net.HttpHeaders`\ne.g. `com.google.common.net.HttpHeaders.X_FORWARDED_HOST` so there is no need to introduce them again ðŸ˜Š",
      "range": {
        "startLine": 36,
        "startChar": 2,
        "endLine": 38,
        "endChar": 74
      },
      "revId": "23c368d38ff73c5bd8cc6aea701abe55e588a76b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "275e4f52_b1af2720",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/LoginOAuthRedirectionFilter.java",
        "patchSetId": 30
      },
      "lineNbr": 38,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-08-22T07:40:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f2e05a9b_40bef246",
      "range": {
        "startLine": 36,
        "startChar": 2,
        "endLine": 38,
        "endChar": 74
      },
      "revId": "23c368d38ff73c5bd8cc6aea701abe55e588a76b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76068c12_d2e47805",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/LoginOAuthRedirectionFilter.java",
        "patchSetId": 30
      },
      "lineNbr": 67,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-08-22T06:39:27Z",
      "side": 1,
      "message": "I would say that from these 3 only `X-Forwarded-Host` determines if forwarding needs to be performed - the other two are optional and complementary to the host. IOW this condition could be simplified to `maybeXFHostHeader.isPresent()` or better leverage the functional interface e.g.\n\n```\n    maybeXFHostHeader.ifPresentOrElse(\n        host -\u003e {\n          // build source URL and send redirect\n        },\n        () -\u003e {\n          // perform filtering\n        });\n```\nWDYT?",
      "range": {
        "startLine": 65,
        "startChar": 4,
        "endLine": 67,
        "endChar": 44
      },
      "revId": "23c368d38ff73c5bd8cc6aea701abe55e588a76b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed6a2bea_21a08847",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/LoginOAuthRedirectionFilter.java",
        "patchSetId": 30
      },
      "lineNbr": 67,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-08-22T07:40:36Z",
      "side": 1,
      "message": "\u003e the other two are optional and complementary to the host.\n\nThat is not true because they are needed to build the `final_redirect_url` query parameter.",
      "parentUuid": "76068c12_d2e47805",
      "range": {
        "startLine": 65,
        "startChar": 4,
        "endLine": 67,
        "endChar": 44
      },
      "revId": "23c368d38ff73c5bd8cc6aea701abe55e588a76b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "caa12137_2fafba2f",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/LoginOAuthRedirectionFilter.java",
        "patchSetId": 30
      },
      "lineNbr": 67,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2023-08-22T09:51:25Z",
      "side": 1,
      "message": "I would change the if condition:\n- *IF* the HOST (or X-Forwarded-Host) is different than the one in the canonical web URL, take this path, which would also use the other forwarding bits (if present)\n- otherwise do the regular filtering",
      "parentUuid": "ed6a2bea_21a08847",
      "range": {
        "startLine": 65,
        "startChar": 4,
        "endLine": 67,
        "endChar": 44
      },
      "revId": "23c368d38ff73c5bd8cc6aea701abe55e588a76b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1afe2e8f_36f51b48",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/LoginOAuthRedirectionFilter.java",
        "patchSetId": 30
      },
      "lineNbr": 67,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-08-22T10:07:10Z",
      "side": 1,
      "message": "based on your comments and taking into account that ALL the headers are compulsory because we need to build the final redirect url, the code would be like this:\n```\n  public void doFilter(\n      ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)\n      throws IOException, ServletException {\n    HttpServletRequest httpRequest \u003d (HttpServletRequest) servletRequest;\n    HttpServletResponse httpResponse \u003d (HttpServletResponse) servletResponse;\n\n    Optional\u003cString\u003e maybeXFHostHeader \u003d\n        Optional.ofNullable(httpRequest.getHeader(HttpHeaders.X_FORWARDED_HOST));\n\n    if (maybeXFHostHeader.isPresent()\n        \u0026\u0026 !canonicalWebUrl.getHost().equalsIgnoreCase(maybeXFHostHeader.get())) {\n      Optional\u003cInteger\u003e maybeXFPortHeader \u003d\n          Optional.ofNullable(httpRequest.getHeader(HttpHeaders.X_FORWARDED_PORT))\n              .map(Integer::parseInt);\n      Optional\u003cString\u003e maybeXFProtoHeader \u003d\n          Optional.ofNullable(httpRequest.getHeader(HttpHeaders.X_FORWARDED_PROTO));\n\n      if (maybeXFPortHeader.isPresent() \u0026\u0026 maybeXFProtoHeader.isPresent()) {\n        URL sourceURL \u003d\n            new URL(\n                maybeXFProtoHeader.get(), maybeXFHostHeader.get(), maybeXFPortHeader.get(), \"/\");\n        httpResponse.sendRedirect(buildLoginURL(sourceURL));\n      } else {\n        filterChain.doFilter(servletRequest, servletResponse);\n      }\n    } else {\n      filterChain.doFilter(servletRequest, servletResponse);\n    }\n  }\n```\n\nPersonally for me is more difficult to read.",
      "parentUuid": "caa12137_2fafba2f",
      "range": {
        "startLine": 65,
        "startChar": 4,
        "endLine": 67,
        "endChar": 44
      },
      "revId": "23c368d38ff73c5bd8cc6aea701abe55e588a76b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec132172_cef88eef",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/LoginOAuthRedirectionFilter.java",
        "patchSetId": 30
      },
      "lineNbr": 67,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-08-22T13:36:12Z",
      "side": 1,
      "message": "@geminica.programs@gmail.com I have playing with:\n```\n   maybeXFHostHeader.ifPresentOrElse(\n        host -\u003e {\n          // build source URL and send redirect\n        },\n        () -\u003e {\n          // perform filtering\n        });\n```\nBut the problem is that there are checked exceptions inside the lambdas forcing to try/catch and making the code very difficult to follow.\n\nMaybe we could pair on that.",
      "parentUuid": "1afe2e8f_36f51b48",
      "range": {
        "startLine": 65,
        "startChar": 4,
        "endLine": 67,
        "endChar": 44
      },
      "revId": "23c368d38ff73c5bd8cc6aea701abe55e588a76b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2523d618_56261467",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/LoginOAuthRedirectionFilter.java",
        "patchSetId": 30
      },
      "lineNbr": 67,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-08-22T16:15:16Z",
      "side": 1,
      "message": "I have done another iteration more in line with what you are saying. Please, let me know and we take it from there.",
      "parentUuid": "ec132172_cef88eef",
      "range": {
        "startLine": 65,
        "startChar": 4,
        "endLine": 67,
        "endChar": 44
      },
      "revId": "23c368d38ff73c5bd8cc6aea701abe55e588a76b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4121228d_071a13bf",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/LoginOAuthRedirectionFilter.java",
        "patchSetId": 30
      },
      "lineNbr": 67,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-08-22T16:28:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2523d618_56261467",
      "range": {
        "startLine": 65,
        "startChar": 4,
        "endLine": 67,
        "endChar": 44
      },
      "revId": "23c368d38ff73c5bd8cc6aea701abe55e588a76b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13a4bd2e_8083f2a5",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/OAuthProtocol.java",
        "patchSetId": 30
      },
      "lineNbr": 325,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-08-22T06:39:27Z",
      "side": 1,
      "message": "How about leveraging `Optional` fluent API?\n```suggestion\n    maybeFinalRedirectUrl\n      .map(finalRedirectUrl -\u003e\n        state\n          + ME_SEPARATOR\n          + FINAL_REDIRECT_URL\n          + \"\u003d\"\n          + URLEncoder.encode(finalRedirectUrl, \"UTF-8\"))\n      .orElse(state);\n```\n\nGeneral remark: `Optional.ifPresent` typically indicates that fluent API could be used",
      "range": {
        "startLine": 318,
        "startChar": 4,
        "endLine": 325,
        "endChar": 17
      },
      "revId": "23c368d38ff73c5bd8cc6aea701abe55e588a76b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0ebbe46_75479a74",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/OAuthProtocol.java",
        "patchSetId": 30
      },
      "lineNbr": 325,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-08-22T07:40:36Z",
      "side": 1,
      "message": "I tried that but `URLEncoder.encode` throws an check exception `UnsupportedEncodingException` so I have to try and catch inside of the map making the code less descriptive. \n\nI am open to suggestions.",
      "parentUuid": "13a4bd2e_8083f2a5",
      "range": {
        "startLine": 318,
        "startChar": 4,
        "endLine": 325,
        "endChar": 17
      },
      "revId": "23c368d38ff73c5bd8cc6aea701abe55e588a76b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8698364a_d98bfbe9",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/OAuthProtocol.java",
        "patchSetId": 30
      },
      "lineNbr": 325,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-08-22T09:13:00Z",
      "side": 1,
      "message": "I have seen this approach:\n```\n@FunctionalInterface\npublic interface CheckedFunction\u003cT, R\u003e {\n    R apply(T t) throws Exception;\n}\n\npublic static \u003cT, R\u003e Function\u003cT, R\u003e unchecked(CheckedFunction\u003cT, R\u003e checkedFunction) {\n    return t -\u003e {\n        try {\n            return checkedFunction.apply(t);\n        } catch (Exception e) {\n            throw new RuntimeException(e); // or custom subclass of RuntimeException\n        }\n    };\n}\n```\n\nAnd use it i.e:\n```\nList\u003cCustomer\u003e customer \u003d Stream.of(1L, 2L)\n    .map(unchecked(this::queryDatabaseForCustomer))\n    .collect(toList());\n```\n\nDo we want to go in that way?",
      "parentUuid": "d0ebbe46_75479a74",
      "range": {
        "startLine": 318,
        "startChar": 4,
        "endLine": 325,
        "endChar": 17
      },
      "revId": "23c368d38ff73c5bd8cc6aea701abe55e588a76b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c69b931_b0de423f",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/OAuthWebFilter.java",
        "patchSetId": 30
      },
      "lineNbr": 106,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-08-22T06:39:27Z",
      "side": 1,
      "message": "```suggestion\n            extractFinalRedirectionFromURL(httpRequest).ifPresent(finalRedirectUrl -\u003e httpRequest\n                  .getSession()\n                  .setAttribute(FINAL_REDIRECT_URL, finalRedirectionFromURL))\n```",
      "range": {
        "startLine": 100,
        "startChar": 12,
        "endLine": 106,
        "endChar": 13
      },
      "revId": "23c368d38ff73c5bd8cc6aea701abe55e588a76b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bea4c3e1_b1ae3e32",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/OAuthWebFilter.java",
        "patchSetId": 30
      },
      "lineNbr": 106,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-08-22T07:40:36Z",
      "side": 1,
      "message": "I tried that but I had a problem in the L80:\n```\nHttpServletRequest httpRequest \u003d (HttpServletRequest) request;\n\n```\n\nbecause it needs to be final to be inside of the lambda function. So if I make final then the code breaks because that variable unfortunately is mutable as you can see in L119:\n```\n          httpRequest \u003d\n              new AuthenticatedHttpRequest(\n                  httpRequest,\n                  config.httpHeader,\n                  ghLogin.getMyself().getLogin(),\n                  config.oauthHttpHeader,\n                  GITHUB_EXT_ID + hashedToken);\n```\nHappy to speak about alternatives",
      "parentUuid": "9c69b931_b0de423f",
      "range": {
        "startLine": 100,
        "startChar": 12,
        "endLine": 106,
        "endChar": 13
      },
      "revId": "23c368d38ff73c5bd8cc6aea701abe55e588a76b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9a354cd_28f693a5",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/OAuthWebFilter.java",
        "patchSetId": 30
      },
      "lineNbr": 106,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-08-22T09:22:07Z",
      "side": 1,
      "message": "Maybe it would be worth to refactor the original code OAuthWebFilter.doFilter but that should be in another follow-up change.",
      "parentUuid": "bea4c3e1_b1ae3e32",
      "range": {
        "startLine": 100,
        "startChar": 12,
        "endLine": 106,
        "endChar": 13
      },
      "revId": "23c368d38ff73c5bd8cc6aea701abe55e588a76b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c6d3173_c65d1547",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/OAuthWebFilter.java",
        "patchSetId": 30
      },
      "lineNbr": 106,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-08-22T16:28:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f9a354cd_28f693a5",
      "range": {
        "startLine": 100,
        "startChar": 12,
        "endLine": 106,
        "endChar": 13
      },
      "revId": "23c368d38ff73c5bd8cc6aea701abe55e588a76b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50157dd3_8a777d5a",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/OAuthWebFilter.java",
        "patchSetId": 30
      },
      "lineNbr": 115,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-08-22T06:39:27Z",
      "side": 1,
      "message": "same as above",
      "range": {
        "startLine": 110,
        "startChar": 12,
        "endLine": 115,
        "endChar": 13
      },
      "revId": "23c368d38ff73c5bd8cc6aea701abe55e588a76b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3c0bf2b_6c7ad434",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/OAuthWebFilter.java",
        "patchSetId": 30
      },
      "lineNbr": 115,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-08-22T07:40:36Z",
      "side": 1,
      "message": "The same as above. Happy to speak about alternatives.",
      "parentUuid": "50157dd3_8a777d5a",
      "range": {
        "startLine": 110,
        "startChar": 12,
        "endLine": 115,
        "endChar": 13
      },
      "revId": "23c368d38ff73c5bd8cc6aea701abe55e588a76b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb5a69e9_ae4e4bfb",
        "filename": "github-oauth/src/test/java/com/googlesource/gerrit/plugins/github/oauth/LoginOAuthRedirectionFilterTest.java",
        "patchSetId": 30
      },
      "lineNbr": 1,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2023-08-22T06:39:27Z",
      "side": 1,
      "message": "nit: `s/2021/2023`",
      "range": {
        "startLine": 1,
        "startChar": 17,
        "endLine": 1,
        "endChar": 21
      },
      "revId": "23c368d38ff73c5bd8cc6aea701abe55e588a76b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "190bcae6_980ac429",
        "filename": "github-oauth/src/test/java/com/googlesource/gerrit/plugins/github/oauth/LoginOAuthRedirectionFilterTest.java",
        "patchSetId": 30
      },
      "lineNbr": 1,
      "author": {
        "id": 1149185
      },
      "writtenOn": "2023-08-22T07:42:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fb5a69e9_ae4e4bfb",
      "range": {
        "startLine": 1,
        "startChar": 17,
        "endLine": 1,
        "endChar": 21
      },
      "revId": "23c368d38ff73c5bd8cc6aea701abe55e588a76b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}