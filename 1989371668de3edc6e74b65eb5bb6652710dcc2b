{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5e18a1eb_921f0137",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2024-04-03T05:58:43Z",
      "side": 1,
      "message": "Having said that, it appears to be a problem to find an alternative replacement in Java world to experimental @Delegates annotation of `lombok` for delegation pattern implementation: [1], used in `GitHubRepository` class:\n\n```\n  @Delegate private GHRepository ghRepository;\n```\nThe only thing I found was Kotlin native support for that feature: [2]. Of course, Bazel has support for `rules_kotlin`: [3], but I don\u0027t think we should migrate this plugin or `GitHubRepository`class only to Kotlin because of this feature ðŸ˜Š\n\nOf course, we could try delombok: [4] to run as a preprocessor step, and even commit the result as the source, and use it in follow-up build toolchain, or alternatively try to integrate it, as bookingcom folks have done here: [5], WDYT?\n\n[1]: https://en.wikipedia.org/wiki/Delegation_pattern\n[2]: https://kotlinlang.org/docs/delegation.html\n[3]: https://github.com/bazelbuild/rules_kotlin\n[4]: https://projectlombok.org/features/delombok\n[5]: https://github.com/bookingcom/rules_lombok_java_library",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 18,
        "endChar": 17
      },
      "revId": "1989371668de3edc6e74b65eb5bb6652710dcc2b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60dad148_df4e1034",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2024-04-03T13:14:34Z",
      "side": 1,
      "message": "maybe auto-delegate might help https://github.com/ryandens/auto-delegate",
      "parentUuid": "5e18a1eb_921f0137",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 18,
        "endChar": 17
      },
      "revId": "1989371668de3edc6e74b65eb5bb6652710dcc2b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "577472ac_57b38861",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2024-06-02T12:23:40Z",
      "side": 1,
      "message": "Thanks for this suggestion, I\u0027ve found another workaround and will upload new change for review.",
      "parentUuid": "60dad148_df4e1034",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 18,
        "endChar": 17
      },
      "revId": "1989371668de3edc6e74b65eb5bb6652710dcc2b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "911ff894_c6c37d4c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-06-13T17:23:28Z",
      "side": 1,
      "message": "\u003e maybe auto-delegate might help https://github.com/ryandens/auto-delegate\n\nI believe we want to remove the annotation processor _Lombok_ not because we don\u0027t like the project, but we do not want to have any annotation processor in the build chain.\n\nAFAIK, auto-delegate is yet another annotation processor like Lombok, so it is definitely a no-go.",
      "parentUuid": "577472ac_57b38861",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 18,
        "endChar": 17
      },
      "revId": "1989371668de3edc6e74b65eb5bb6652710dcc2b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71aa1c17_66930a3b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2024-06-13T20:19:58Z",
      "side": 1,
      "message": "I believe making a single change to remove *all* Lombok usage is way too much for now: I\u0027ll upload a series of intermediate changes for it.",
      "revId": "1989371668de3edc6e74b65eb5bb6652710dcc2b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "954873e6_52ed03b6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2024-06-14T20:54:21Z",
      "side": 1,
      "message": "Thank you!",
      "parentUuid": "71aa1c17_66930a3b",
      "revId": "1989371668de3edc6e74b65eb5bb6652710dcc2b",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "1989371668de3edc6e74b65eb5bb6652710dcc2b",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "1989371668de3edc6e74b65eb5bb6652710dcc2b",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overriden by adding the hashtag allow-unresolved-comments."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "hashtag:allow-unresolved-comments"
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:unresolved"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["has:unresolved"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"hashtag:allow-unresolved-comments"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["hashtag:allow-unresolved-comments"]}
      },
      "patchSetCommitId": "1989371668de3edc6e74b65eb5bb6652710dcc2b",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "1989371668de3edc6e74b65eb5bb6652710dcc2b",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI result status for build and tests is passing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Verified=MAX","label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "1989371668de3edc6e74b65eb5bb6652710dcc2b",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}