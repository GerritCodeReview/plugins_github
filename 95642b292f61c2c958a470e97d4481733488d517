{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "bfec6b38_2babfb3d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 18,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-09-01T08:03:39Z",
      "side": 1,
      "message": "This is valid for all the other information stored in All-Users.git, that\u0027s why All-Users.git should be protected by ACLs. I\u0027d just say that all credentials should be stored encrypted and protected at-rest.",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 18,
        "endChar": 14
      },
      "revId": "95642b292f61c2c958a470e97d4481733488d517",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3ef52fb7_d7d4380b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 18,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2022-09-02T07:55:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bfec6b38_2babfb3d",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 18,
        "endChar": 14
      },
      "revId": "95642b292f61c2c958a470e97d4481733488d517",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b92aecac_241b5ffa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-09-01T08:03:39Z",
      "side": 1,
      "message": "I\u0027d say \"vulnerability has been exploited in the past on other OAuth-based integrations\"",
      "range": {
        "startLine": 21,
        "startChar": 5,
        "endLine": 21,
        "endChar": 18
      },
      "revId": "95642b292f61c2c958a470e97d4481733488d517",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7ebb92c5_53b1e43f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2022-09-02T07:55:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b92aecac_241b5ffa",
      "range": {
        "startLine": 21,
        "startChar": 5,
        "endLine": 21,
        "endChar": 18
      },
      "revId": "95642b292f61c2c958a470e97d4481733488d517",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df181a28_be752e40",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2022-08-29T18:27:10Z",
      "side": 1,
      "message": "nit: `Bug` footer should be part of footers section IOW at the end of commit message",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 16
      },
      "revId": "95642b292f61c2c958a470e97d4481733488d517",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "da401c16_3e147698",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2022-09-02T07:55:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "df181a28_be752e40",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 16
      },
      "revId": "95642b292f61c2c958a470e97d4481733488d517",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76c337c3_2d26e75a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2022-08-29T18:27:10Z",
      "side": 1,
      "message": "how about using the official gerrit docs link https://gerrit-documentation.storage.googleapis.com/Documentation/3.6.1/config-accounts.html#external-ids ?",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 28,
        "endChar": 79
      },
      "revId": "95642b292f61c2c958a470e97d4481733488d517",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4178a2bc_cdc4a8d6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2022-09-02T07:55:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "76c337c3_2d26e75a",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 28,
        "endChar": 79
      },
      "revId": "95642b292f61c2c958a470e97d4481733488d517",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dde2eba4_3616344d",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/AES.java",
        "patchSetId": 4
      },
      "lineNbr": 29,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-09-01T08:03:39Z",
      "side": 1,
      "message": "AES is the cipher algorithm, which is defined at L39. This class actually doesn\u0027t really know or implement AES apart from just having it hardcoded.\n\nWhy not simply calling this OAuthTokenCipher?",
      "range": {
        "startLine": 29,
        "startChar": 13,
        "endLine": 29,
        "endChar": 16
      },
      "revId": "95642b292f61c2c958a470e97d4481733488d517",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91eb8138_9f83e63f",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/AES.java",
        "patchSetId": 4
      },
      "lineNbr": 29,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2022-09-02T07:55:09Z",
      "side": 1,
      "message": "Yep, I had just put a class together for the PoC, it should definitely be renamed.\nWhat you suggested seems like a good name (even though arguably we could name it something more generic as it could be used to do any encryption, not just OAuthtokens).",
      "parentUuid": "dde2eba4_3616344d",
      "range": {
        "startLine": 29,
        "startChar": 13,
        "endLine": 29,
        "endChar": 16
      },
      "revId": "95642b292f61c2c958a470e97d4481733488d517",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3fd439b2_159e6413",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/AES.java",
        "patchSetId": 4
      },
      "lineNbr": 39,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-09-01T08:03:39Z",
      "side": 1,
      "message": "cipher cannot be shared across invocation: move it before L44 as local variable.",
      "revId": "95642b292f61c2c958a470e97d4481733488d517",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "434d2ab9_48eb6f90",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/AES.java",
        "patchSetId": 4
      },
      "lineNbr": 39,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-09-01T08:03:39Z",
      "side": 1,
      "message": "AES and AES/ECB/PKCS5Padding are key and cipher algos, which should be configurable. I am fine in having a default to AES and AES/ECB/PKCS5Padding.",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 39,
        "endChar": 56
      },
      "revId": "95642b292f61c2c958a470e97d4481733488d517",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5f17c67_cd9e1788",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/AES.java",
        "patchSetId": 4
      },
      "lineNbr": 39,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2022-09-02T07:55:09Z",
      "side": 1,
      "message": "You make a good point, but I thought that making it configurable was out of scope for this card, as it provides some flexibility that is not strictly required to achieve the goal of this issue.\n\nI thought about doing this as a follow up change, but since it is not much invasive, I can do it as part of this one.",
      "parentUuid": "434d2ab9_48eb6f90",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 39,
        "endChar": 56
      },
      "revId": "95642b292f61c2c958a470e97d4481733488d517",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f6471cf_a6b0ae20",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/AES.java",
        "patchSetId": 4
      },
      "lineNbr": 44,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2022-08-29T18:27:10Z",
      "side": 1,
      "message": "I can see that init is called in both (encrypt and decrypt) with the same data. How about calling it only once e.g. in constructor or in memoized Supplier if that doesn\u0027t have to happen every time?",
      "range": {
        "startLine": 44,
        "startChar": 6,
        "endLine": 44,
        "endChar": 50
      },
      "revId": "95642b292f61c2c958a470e97d4481733488d517",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80e30832_ecc07472",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/AES.java",
        "patchSetId": 4
      },
      "lineNbr": 44,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-09-01T08:03:39Z",
      "side": 1,
      "message": "I believe the init *has to happen* every time because needs to initialise the Cipher.",
      "parentUuid": "9f6471cf_a6b0ae20",
      "range": {
        "startLine": 44,
        "startChar": 6,
        "endLine": 44,
        "endChar": 50
      },
      "revId": "95642b292f61c2c958a470e97d4481733488d517",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fada0082_6369d4a0",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/AES.java",
        "patchSetId": 4
      },
      "lineNbr": 44,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2022-09-02T06:30:48Z",
      "side": 1,
      "message": "Hmm you made me thinking ;) so here we go:\n\n```\npublic class Ciphers {\n  private static SecretKeySpec getSecretKey() throws IOException {\n    try (FileInputStream in \u003d new FileInputStream(Paths.get(\"/dev/zero\").toFile())) {\n      byte[] bytes \u003d new byte[16];\n      in.read(bytes);\n      return new SecretKeySpec(bytes, \"AES\");\n    }\n  }\n\n  static class TestCipher {\n    private final Cipher cipher;\n\n    TestCipher(SecretKeySpec secretKey) throws Exception {\n      this.cipher \u003d Cipher.getInstance(\"AES/ECB/PKCS5Padding\");\n      cipher.init(Cipher.ENCRYPT_MODE, secretKey);\n    }\n\n    public String encrypt(final String strToEncrypt) throws Exception {\n      return Base64.getEncoder()\n          .encodeToString(cipher.doFinal(strToEncrypt.getBytes(StandardCharsets.UTF_8)));\n    }\n  }\n\n  public static void main(String[] args) throws Exception {\n    SecretKeySpec secretKey \u003d getSecretKey();\n\n    System.out.println(\"Initialize once for all encryptions:\");\n    TestCipher testCipher \u003d new TestCipher(secretKey);\n    for (int i \u003d 0; i \u003c 5; i++) {\n      System.out.println(testCipher.encrypt(\"foo\" + i));\n    }\n\n    System.out.println(\"Initialize every time when encrypt is called:\");\n    for (int i \u003d 0; i \u003c 5; i++) {\n      System.out.println(new TestCipher(secretKey).encrypt(\"foo\" + i));\n    }\n  }\n}\n```\n\nand it produces the following (stable) output:\n\n```\nInitialize once for all encryptions:\nWwu0yF71aWSCLtQ7QpoZAQ\u003d\u003d\n5RxyOT7c1DzdvG3VKdghgg\u003d\u003d\nMOMTSjrIp9/8jEUWyt6OHg\u003d\u003d\nGasnCq+t4iO1MUewRqVB7A\u003d\u003d\nDL6y399u3W893tmMBkPSOA\u003d\u003d\nInitialize every time when encrypt is called:\nWwu0yF71aWSCLtQ7QpoZAQ\u003d\u003d\n5RxyOT7c1DzdvG3VKdghgg\u003d\u003d\nMOMTSjrIp9/8jEUWyt6OHg\u003d\u003d\nGasnCq+t4iO1MUewRqVB7A\u003d\u003d\nDL6y399u3W893tmMBkPSOA\u003d\u003d\n```\n\nIOW if I\u0027m not mistaken one doesn\u0027t have to init it over and over again. However having said that we should keep in mind that we have TWO modes `encrypt` and `decrypt` (which I haven\u0027t noticed before 😄). IF we want this optimisation then I would propose to have dedicated classes (singletons) per mode.",
      "parentUuid": "80e30832_ecc07472",
      "range": {
        "startLine": 44,
        "startChar": 6,
        "endLine": 44,
        "endChar": 50
      },
      "revId": "95642b292f61c2c958a470e97d4481733488d517",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f2e0f62_003bff71",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/AES.java",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-09-01T08:03:39Z",
      "side": 1,
      "message": "This should throw an exception rather than just logging",
      "revId": "95642b292f61c2c958a470e97d4481733488d517",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8dfe6fb5_3c247678",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/AES.java",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2022-09-02T07:55:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8f2e0f62_003bff71",
      "revId": "95642b292f61c2c958a470e97d4481733488d517",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7eee793_ecddb15a",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/AES.java",
        "patchSetId": 4
      },
      "lineNbr": 50,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-09-01T08:03:39Z",
      "side": 1,
      "message": "better to throw an exception rather than returning null",
      "revId": "95642b292f61c2c958a470e97d4481733488d517",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a3806f76_f0b453e8",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/AES.java",
        "patchSetId": 4
      },
      "lineNbr": 50,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2022-09-02T07:55:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c7eee793_ecddb15a",
      "revId": "95642b292f61c2c958a470e97d4481733488d517",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0cc8ecc6_18ac2600",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/AES.java",
        "patchSetId": 4
      },
      "lineNbr": 60,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-09-01T08:03:39Z",
      "side": 1,
      "message": "Same comments as above",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 60,
        "endChar": 16
      },
      "revId": "95642b292f61c2c958a470e97d4481733488d517",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9b300a05_e4f6dfce",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/AES.java",
        "patchSetId": 4
      },
      "lineNbr": 60,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2022-09-02T07:55:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0cc8ecc6_18ac2600",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 60,
        "endChar": 16
      },
      "revId": "95642b292f61c2c958a470e97d4481733488d517",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b524837_7e9a0cec",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/GitHubOAuthConfig.java",
        "patchSetId": 4
      },
      "lineNbr": 57,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-09-01T08:24:38Z",
      "side": 1,
      "message": "PASSWORD_DEVICE_DEFAULT",
      "range": {
        "startLine": 57,
        "startChar": 29,
        "endLine": 57,
        "endChar": 44
      },
      "revId": "95642b292f61c2c958a470e97d4481733488d517",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9ba5141d_7d4e3e66",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/GitHubOAuthConfig.java",
        "patchSetId": 4
      },
      "lineNbr": 57,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2022-09-02T07:55:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5b524837_7e9a0cec",
      "range": {
        "startLine": 57,
        "startChar": 29,
        "endLine": 57,
        "endChar": 44
      },
      "revId": "95642b292f61c2c958a470e97d4481733488d517",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4cca2a7a_5ac6a908",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/GitHubOAuthConfig.java",
        "patchSetId": 4
      },
      "lineNbr": 58,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-09-01T08:24:38Z",
      "side": 1,
      "message": "PASSWORD_LENGTH_DEFAULT",
      "range": {
        "startLine": 58,
        "startChar": 30,
        "endLine": 58,
        "endChar": 45
      },
      "revId": "95642b292f61c2c958a470e97d4481733488d517",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "678e0074_0ccc47e3",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/GitHubOAuthConfig.java",
        "patchSetId": 4
      },
      "lineNbr": 58,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2022-09-02T07:55:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4cca2a7a_5ac6a908",
      "range": {
        "startLine": 58,
        "startChar": 30,
        "endLine": 58,
        "endChar": 45
      },
      "revId": "95642b292f61c2c958a470e97d4481733488d517",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d15caeca_e9d0e976",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/GitHubOAuthConfig.java",
        "patchSetId": 4
      },
      "lineNbr": 198,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-09-01T08:24:38Z",
      "side": 1,
      "message": "byte[] passphrase \u003d Files.readAllBytes(Paths.get(passwordDevice));",
      "range": {
        "startLine": 196,
        "startChar": 0,
        "endLine": 198,
        "endChar": 51
      },
      "revId": "95642b292f61c2c958a470e97d4481733488d517",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8526c53_44ed7dc9",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/GitHubOAuthConfig.java",
        "patchSetId": 4
      },
      "lineNbr": 198,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2022-09-02T06:30:48Z",
      "side": 1,
      "message": "AFAIU that it will not work for `/dev/zero` as one can read unlimited number of bytes from it...",
      "parentUuid": "d15caeca_e9d0e976",
      "range": {
        "startLine": 196,
        "startChar": 0,
        "endLine": 198,
        "endChar": 51
      },
      "revId": "95642b292f61c2c958a470e97d4481733488d517",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42f53ed0_1949622f",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/OAuthWebFilter.java",
        "patchSetId": 4
      },
      "lineNbr": 96,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2022-09-01T08:24:38Z",
      "side": 1,
      "message": "This would then generated an NPE at L103.",
      "range": {
        "startLine": 96,
        "startChar": 84,
        "endLine": 96,
        "endChar": 96
      },
      "revId": "95642b292f61c2c958a470e97d4481733488d517",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3490284_cfc55c52",
        "filename": "github-oauth/src/main/java/com/googlesource/gerrit/plugins/github/oauth/OAuthWebFilter.java",
        "patchSetId": 4
      },
      "lineNbr": 96,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2022-09-02T07:55:09Z",
      "side": 1,
      "message": "I don\u0027t think it would, tbh (in fact, I tested this and it doesn\u0027t).\n\nStringification of null in Java, gives the string \"null\".\n\nbefore this change the value used in the interpolation at L103 would be:\n\n```\nGITHUB_EXT_ID + ghLogin.getToken().accessToken\n```\n\nSo this behaviour is unchanged.\n\nHaving said that, we should probably throw a ServletException rather than storing the \"null\" key in external_ids.\n\nLet me fix this.",
      "parentUuid": "42f53ed0_1949622f",
      "range": {
        "startLine": 96,
        "startChar": 84,
        "endLine": 96,
        "endChar": 96
      },
      "revId": "95642b292f61c2c958a470e97d4481733488d517",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}